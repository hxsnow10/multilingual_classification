78 1
model: 4.27714473299
similar: 4.27714473299
conflict=[] 4.27714473299
give 4.27714473299
index=ndarray.argmax(score) 4.27714473299
True: 4.27714473299
word:').decode('utf-8') 4.27714473299
reverse=True) 4.27714473299
(new_d[w]!=numpy.array([0,0,0])).any(): 4.27714473299
except 4.27714473299
conflict: 4.27714473299
new_d: 4.27714473299
result 4.27714473299
topn=n) 4.27714473299
similar=model.most_similar(w, 4.27714473299
deepcopy 4.27714473299
conflict=sorted(conflict, 4.27714473299
model' 4.27714473299
else: 4.27714473299
result[i]: 4.27714473299
x:float(x[-1]),reverse=True) 4.27714473299
try: 4.27714473299
w,p 4.27714473299
str(probs))) 4.27714473299
str(index-1)!=d[w]: 4.27714473299
oo=open('result'+str(i)+'.txt','w') 4.27714473299
n:(default 4.27714473299
Exception,e: 4.27714473299
x:(x[1],x[0].encode('utf-8')), 4.27714473299
str(index-1), 4.27714473299
'error',e 4.27714473299
Pool 4.27714473299
word2vec 4.27714473299
oo.write(w.encode('utf-8')+'\t'+str(p)+'\n') 4.27714473299
oo.write('\t'.join(i)+'\n') 4.27714473299
score=new_d[w]/(sum(new_d[w])+0.00001) 4.27714473299
range(3): 4.27714473299
oo=open('conflict.txt','w') 4.27714473299
n=raw_input('Enter 4.27714473299
encoding=utf-8 4.27714473299
break 4.27714473299
result] 4.27714473299
w=raw_input('Enter 4.27714473299
20)') 4.27714473299
conflict.append((w.encode('utf-8'), 4.27714473299
copy 4.27714473299
else:n=int(n.strip()) 4.27714473299
ndarray 4.27714473299
n.strip()=='':n=20 4.27714473299
result[i]=sorted(result[i], 4.27714473299
d[w], 4.27714473299
result[index].append((w,float(probs))) 4.27714473299
probs=score[index] 4.27714473299
gensim.models 4.27714473299
[len(i) 4.27714473299
while 4.27714473299
continue 4.27714473299
model=word2vec.Word2Vec.load_word2vec_format('vec.txt',binary=False) 4.27714473299
time 4.27714473299
d: 4.27714473299
'word 4.27714473299
multiprocessing 4.27714473299
result=[[],[],[]] 4.27714473299
''' 3.87167962488
# 3.87167962488
numpy 3.87167962488
oo.close() 3.87167962488
not 3.87167962488
ww,p 3.87167962488
key=lambda 3.87167962488
i 3.58399755243
w 3.58399755243
from 3.36085400112
print 3.36085400112
if 3.17853244432
for 3.0243817645
import 3.0243817645
in 2.66770682056
